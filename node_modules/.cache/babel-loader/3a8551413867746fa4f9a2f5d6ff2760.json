{"ast":null,"code":"var _jsxFileName = \"C:\\\\All React Project\\\\Resume Projects\\\\daraz-clone-client\\\\src\\\\components\\\\Page\\\\Register\\\\Components\\\\ShowPassword.js\";\nimport React from \"react\";\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowPassword = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-password center\",\n    onClick: e => {\n      // setShowPassword(!showsPassword);\n      let element = e.currentTarget.parentElement.childNodes;\n      let passwordElement = element[0];\n\n      if (passwordElement.type === \"text\") {\n        passwordElement.type = \"password\";\n      } else if (passwordElement.type === \"password\") {\n        passwordElement.type = \"text\";\n      } // element[0].type = `${showPassword ? \"text\" : \"password\"}`;\n      // console.log(\n      //   element[1].childNodes[0].style.display,\n      //   showPassword\n      // );\n\n\n      let eyeElements = Array.prototype.slice.call(element[1].childNodes);\n      eyeElements.map(item => {\n        if (item.style.display === \"block\") {\n          item.style.display = \"none\";\n        } else if (item.style.display === \"none\") {\n          item.style.display = \"block\";\n        }\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(AiFillEye, {\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AiFillEyeInvisible, {\n      style: {\n        display: \"block\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ShowPassword;\nexport default ShowPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowPassword\");","map":{"version":3,"sources":["C:/All React Project/Resume Projects/daraz-clone-client/src/components/Page/Register/Components/ShowPassword.js"],"names":["React","AiFillEye","AiFillEyeInvisible","ShowPassword","e","element","currentTarget","parentElement","childNodes","passwordElement","type","eyeElements","Array","prototype","slice","call","map","item","style","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,gBAA9C;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,sBACE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,OAAO,EAAGC,CAAD,IAAO;AACd;AACA,UAAIC,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgBC,aAAhB,CAA8BC,UAA5C;AACA,UAAIC,eAAe,GAAGJ,OAAO,CAAC,CAAD,CAA7B;;AACA,UAAII,eAAe,CAACC,IAAhB,KAAyB,MAA7B,EAAqC;AACnCD,QAAAA,eAAe,CAACC,IAAhB,GAAuB,UAAvB;AACD,OAFD,MAEO,IAAID,eAAe,CAACC,IAAhB,KAAyB,UAA7B,EAAyC;AAC9CD,QAAAA,eAAe,CAACC,IAAhB,GAAuB,MAAvB;AACD,OARa,CASd;AACA;AACA;AACA;AACA;;;AAEA,UAAIC,WAAW,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BV,OAAO,CAAC,CAAD,CAAP,CAAWG,UAAtC,CAAlB;AACAG,MAAAA,WAAW,CAACK,GAAZ,CAAiBC,IAAD,IAAU;AACxB,YAAIA,IAAI,CAACC,KAAL,CAAWC,OAAX,KAAuB,OAA3B,EAAoC;AAClCF,UAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACD,SAFD,MAEO,IAAIF,IAAI,CAACC,KAAL,CAAWC,OAAX,KAAuB,MAA3B,EAAmC;AACxCF,UAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,GAAqB,OAArB;AACD;AACF,OAND;AAOD,KAzBH;AAAA,4BA2BE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX;AAAlB;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE,QAAC,kBAAD;AAAoB,MAAA,KAAK,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX;AAA3B;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAjCD;;KAAMhB,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\n\r\nconst ShowPassword = () => {\r\n  return (\r\n    <div\r\n      className=\"show-password center\"\r\n      onClick={(e) => {\r\n        // setShowPassword(!showsPassword);\r\n        let element = e.currentTarget.parentElement.childNodes;\r\n        let passwordElement = element[0];\r\n        if (passwordElement.type === \"text\") {\r\n          passwordElement.type = \"password\";\r\n        } else if (passwordElement.type === \"password\") {\r\n          passwordElement.type = \"text\";\r\n        }\r\n        // element[0].type = `${showPassword ? \"text\" : \"password\"}`;\r\n        // console.log(\r\n        //   element[1].childNodes[0].style.display,\r\n        //   showPassword\r\n        // );\r\n\r\n        let eyeElements = Array.prototype.slice.call(element[1].childNodes);\r\n        eyeElements.map((item) => {\r\n          if (item.style.display === \"block\") {\r\n            item.style.display = \"none\";\r\n          } else if (item.style.display === \"none\") {\r\n            item.style.display = \"block\";\r\n          }\r\n        });\r\n      }}\r\n    >\r\n      <AiFillEye style={{ display: \"none\" }} />\r\n      <AiFillEyeInvisible style={{ display: \"block\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowPassword;\r\n"]},"metadata":{},"sourceType":"module"}