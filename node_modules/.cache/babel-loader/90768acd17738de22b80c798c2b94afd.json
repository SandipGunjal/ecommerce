{"ast":null,"code":"var _jsxFileName = \"C:\\\\All React Project\\\\Resume Projects\\\\daraz-clone-client\\\\src\\\\components\\\\Page\\\\Edit Products\\\\EditProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport HeaderNav from \"../../Header Nav/HeaderNav\";\nimport Footer from \"../Home/Footer\";\nimport { MdOutlineCancelPresentation } from \"react-icons/md\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useGlobalContext } from \"../../Context\";\nimport { getImageUrl } from \"../../Helpers/getImageUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadProduct = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    productid\n  } = useParams();\n  const {\n    // logedIn,\n    // setIsLoggedIn,\n    showRedMsg,\n    API,\n    userInfo,\n    topNottification,\n    setTopNottification\n  } = useGlobalContext();\n  const navigate = useNavigate(); // const [test, setTest] = useState(new Date().getTime());\n  // const imageInput = useRef(null);\n  // const [preview, setPreview] = useState([]);\n\n  const [productInfoUpload, setProductInfoUpload] = useState({\n    name: \"\",\n    price: 0,\n    discount: 0,\n    images: [],\n    keywords: [{\n      id: 1639378535414,\n      name: \"Flash Sale\"\n    }],\n    uploader: userInfo.name,\n    uploaderId: userInfo.id\n  });\n  const [subKeyWord, setSubKeyWord] = useState(\"\"); // const [uploadProgress, setUploadProgress] = useState(0);\n\n  const getProduct = async id => {\n    setIsLoading(true);\n    const {\n      data\n    } = await API.get(`/product/single?id=${id}`);\n    setProductInfoUpload({\n      name: data.post.name,\n      price: data.post.price,\n      discount: data.post.discount,\n      images: data.post.images,\n      keywords: data.post.keyWords2,\n      uploader: data.post.uploader,\n      uploaderId: data.post.uploaderId\n    }); // console.log(\"ProductInfoUpload\", {\n    //   name: data.post.name,\n    //   price: data.post.price,\n    //   discount: data.post.discount,\n    //   images: data.post.images,\n    //   keywords: data.post.keyWords2,\n    //   uploader: data.post.uploader,\n    //   uploaderId: data.post.uploaderId,\n    // });\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getProduct(productid);\n  }, []); // useEffect(() => {\n  //   if (!logedIn) {\n  //     navigate(\"/register\");\n  //     showRedMsg({ name: \"You Need to Log in to sell on daraz\" });\n  //   }\n  // }, [logedIn]);\n\n  const handleProductEditSubmit = async e => {\n    e.preventDefault();\n    let formData = new FormData();\n    formData.append(\"name\", productInfoUpload.name);\n    formData.append(\"price\", productInfoUpload.price);\n    formData.append(\"discount\", productInfoUpload.discount);\n    formData.append(\"keywords\", JSON.stringify(productInfoUpload.keywords));\n    formData.append(\"uploader\", productInfoUpload.uploader);\n    formData.append(\"uploaderId\", productInfoUpload.uploaderId); // formData.append(\"images\", productInfoUpload.images);\n    // let cachedArray = productInfoUpload.images.map((item) => {\n    //   return item.src;\n    // });\n    // formData.append(\"images\", cachedArray);\n    // productInfoUpload.images.forEach((item, index) => {\n    //   formData.append(`image${index}`, item.src);\n    // });\n\n    for (let i = 0; i < productInfoUpload.images.length; i++) {\n      formData.append(\"images\", productInfoUpload.images[i].src);\n    } // formData.append(\"image0\", productInfoUpload.images[0].src);\n    // // formData.append(\"images1\", productInfoUpload.images[1].src);\n\n\n    let {\n      data\n    } = await API.patch(`/product/${productid}`, formData, {\n      onUploadProgress: progressEvent => {\n        const progress = parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)); // Update state here\n        // setUploadProgress(progress);\n\n        setTopNottification({ ...topNottification,\n          type: \"progress\",\n          progress,\n          name: \"\",\n          bg: \"#ff7302\",\n          color: \"white\"\n        });\n      }\n    });\n    navigate(`/products/${productid}`);\n    showRedMsg({\n      name: \"Edit Successfull\"\n    });\n  }; // const toBase64 = (file) =>\n  //   new Promise((resolve, reject) => {\n  //     const reader = new FileReader();\n  //     reader.readAsDataURL(file); //must use query selector here\n  //     reader.onload = () => {\n  //       resolve(reader.result);\n  //     };\n  //     reader.onerror = (error) => reject(error);\n  //   });\n  // const selectImage = async () => {\n  //   // await imageInput.current.click();\n  //   let selectInput = await document.querySelector(\"#inputImage\").files[0];\n  //   if (selectInput !== undefined) {\n  //     let cashedImageArray = await productInfoUpload.images;\n  //     const imageString = await toBase64(selectInput);\n  //     let commonId = new Date().getTime();\n  //     await cashedImageArray.push({\n  //       id: commonId,\n  //       src: selectInput,\n  //     });\n  //     setPreview([\n  //       ...preview,\n  //       {\n  //         id: commonId,\n  //         src: imageString,\n  //       },\n  //     ]);\n  //     await setProductInfoUpload({\n  //       ...productInfoUpload,\n  //       images: cashedImageArray,\n  //     });\n  //   }\n  // };\n  // const removeImage = (e) => {\n  //   let cashedImageArray = productInfoUpload.images;\n  //   let cachedPreviewArray = preview;\n  //   let finalImagesArray = cashedImageArray.filter((item) => item.id !== e);\n  //   let finalPreviewArray = cachedPreviewArray.filter((item) => item.id !== e);\n  //   setProductInfoUpload({ ...productInfoUpload, images: finalImagesArray });\n  //   setPreview(finalPreviewArray);\n  // };\n\n\n  const addKeyword = () => {\n    if (subKeyWord !== \"\") {\n      let casheKeyword = productInfoUpload.keywords;\n      casheKeyword.push({\n        id: new Date().getTime(),\n        name: subKeyWord.toLowerCase()\n      });\n      setProductInfoUpload({ ...productInfoUpload,\n        keywords: casheKeyword\n      });\n      setSubKeyWord(\"\");\n    }\n  };\n\n  const removeKeyWord = e => {\n    let cashedItems = productInfoUpload.keywords;\n    let finalItems = cashedItems.filter(item => item.id !== e);\n    setProductInfoUpload({ ...productInfoUpload,\n      keywords: finalItems\n    });\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []); //---------------------For Api Request----------------//\n  //const formData = new FormData();\n  // formData.append(\"image\", storyInfo.img);\n  // formData.append(\"uploaderName\", storyInfo.uploaderName);\n  // formData.append(\"uploaderId\", storyInfo.uploaderId);\n\n  const ggg = async e => {\n    let formData = new FormData(); // formData.append(\"images\", e.target.files);\n    // e.target.files.forEach((item) => {\n    //   formData.append(\"images\", item);\n    // });\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      formData.append(\"images\", e.target.files[i]);\n    }\n\n    let {\n      data\n    } = await API.post(\"/product/w/\", formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-size\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/loading.gif\",\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-products-main full-size\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-products-main-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"log-in-form\",\n          onSubmit: e => {\n            handleProductEditSubmit(e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dr-image-input-container\",\n            children: productInfoUpload.images.map((item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dr-image-input-item\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getImageUrl(item === null || item === void 0 ? void 0 : item.org),\n                  alt: index,\n                  className: \"full-size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dr-input-email\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                alignSelf: \"flex-start\"\n              },\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"register-input\",\n              value: productInfoUpload.name,\n              name: \"name\",\n              type: \"name\",\n              placeholder: \"Enter Product Name\",\n              onChange: e => {\n                setProductInfoUpload({ ...productInfoUpload,\n                  name: e.target.value\n                });\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dr-input-password\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                alignSelf: \"flex-start\"\n              },\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"register-input\",\n              value: productInfoUpload.price,\n              name: \"price\",\n              type: \"number\",\n              placeholder: \"Enter Price\",\n              onChange: e => {\n                setProductInfoUpload({ ...productInfoUpload,\n                  price: e.target.value\n                });\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dr-input-password\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                alignSelf: \"flex-start\"\n              },\n              children: [\"Discount: \", productInfoUpload.discount, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"register-input\",\n              value: productInfoUpload.discount,\n              name: \"discount\",\n              type: \"range\",\n              min: \"1\",\n              max: \"100\",\n              placeholder: \"Enter Discount\",\n              onChange: e => {\n                setProductInfoUpload({ ...productInfoUpload,\n                  discount: e.target.value\n                });\n              },\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dz-add-keyword\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                alignSelf: \"flex-start\"\n              },\n              children: \"Add Keywords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"keyword-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"register-input\",\n                value: subKeyWord,\n                name: \"name\",\n                type: \"name\",\n                placeholder: \"Enter Keyword\",\n                onChange: e => {\n                  setSubKeyWord(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"add-k-btn\",\n                onClick: e => {\n                  addKeyword();\n                },\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"added-keywords-container\",\n              children: productInfoUpload.keywords.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"added-keywords\",\n                  children: [item.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"added-keyword-cross\",\n                    onClick: e => {\n                      removeKeyWord(item.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(MdOutlineCancelPresentation, {\n                      style: {\n                        color: \"red\",\n                        width: \"2rem\",\n                        height: \"1.5rem\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dr-login-submit full-size center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dz-login-btn\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      multiple: true,\n      onChange: e => {\n        ggg(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadProduct, \"aRMXz9AnOyUNGu92TARLKaXDpK4=\", false, function () {\n  return [useParams, useGlobalContext, useNavigate];\n});\n\n_c = UploadProduct;\nexport default UploadProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadProduct\");","map":{"version":3,"sources":["C:/All React Project/Resume Projects/daraz-clone-client/src/components/Page/Edit Products/EditProducts.js"],"names":["React","useState","useEffect","HeaderNav","Footer","MdOutlineCancelPresentation","useNavigate","useParams","useGlobalContext","getImageUrl","UploadProduct","isLoading","setIsLoading","productid","showRedMsg","API","userInfo","topNottification","setTopNottification","navigate","productInfoUpload","setProductInfoUpload","name","price","discount","images","keywords","id","uploader","uploaderId","subKeyWord","setSubKeyWord","getProduct","data","get","post","keyWords2","handleProductEditSubmit","e","preventDefault","formData","FormData","append","JSON","stringify","i","length","src","patch","onUploadProgress","progressEvent","progress","parseInt","Math","round","loaded","total","type","bg","color","addKeyword","casheKeyword","push","Date","getTime","toLowerCase","removeKeyWord","cashedItems","finalItems","filter","item","window","scrollTo","ggg","target","files","map","index","org","alignSelf","value","width","height","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport HeaderNav from \"../../Header Nav/HeaderNav\";\r\nimport Footer from \"../Home/Footer\";\r\nimport { MdOutlineCancelPresentation } from \"react-icons/md\";\r\n\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { useGlobalContext } from \"../../Context\";\r\nimport { getImageUrl } from \"../../Helpers/getImageUrl\";\r\n\r\nconst UploadProduct = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { productid } = useParams();\r\n  const {\r\n    // logedIn,\r\n    // setIsLoggedIn,\r\n    showRedMsg,\r\n    API,\r\n    userInfo,\r\n    topNottification,\r\n    setTopNottification,\r\n  } = useGlobalContext();\r\n  const navigate = useNavigate();\r\n\r\n  // const [test, setTest] = useState(new Date().getTime());\r\n  // const imageInput = useRef(null);\r\n  // const [preview, setPreview] = useState([]);\r\n\r\n  const [productInfoUpload, setProductInfoUpload] = useState({\r\n    name: \"\",\r\n    price: 0,\r\n    discount: 0,\r\n    images: [],\r\n    keywords: [{ id: 1639378535414, name: \"Flash Sale\" }],\r\n    uploader: userInfo.name,\r\n\r\n    uploaderId: userInfo.id,\r\n  });\r\n\r\n  const [subKeyWord, setSubKeyWord] = useState(\"\");\r\n\r\n  // const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const getProduct = async (id) => {\r\n    setIsLoading(true);\r\n    const { data } = await API.get(`/product/single?id=${id}`);\r\n    setProductInfoUpload({\r\n      name: data.post.name,\r\n      price: data.post.price,\r\n      discount: data.post.discount,\r\n      images: data.post.images,\r\n      keywords: data.post.keyWords2,\r\n      uploader: data.post.uploader,\r\n\r\n      uploaderId: data.post.uploaderId,\r\n    });\r\n\r\n    // console.log(\"ProductInfoUpload\", {\r\n    //   name: data.post.name,\r\n    //   price: data.post.price,\r\n    //   discount: data.post.discount,\r\n    //   images: data.post.images,\r\n    //   keywords: data.post.keyWords2,\r\n    //   uploader: data.post.uploader,\r\n\r\n    //   uploaderId: data.post.uploaderId,\r\n    // });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProduct(productid);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (!logedIn) {\r\n  //     navigate(\"/register\");\r\n  //     showRedMsg({ name: \"You Need to Log in to sell on daraz\" });\r\n  //   }\r\n  // }, [logedIn]);\r\n\r\n  const handleProductEditSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"name\", productInfoUpload.name);\r\n    formData.append(\"price\", productInfoUpload.price);\r\n    formData.append(\"discount\", productInfoUpload.discount);\r\n    formData.append(\"keywords\", JSON.stringify(productInfoUpload.keywords));\r\n\r\n    formData.append(\"uploader\", productInfoUpload.uploader);\r\n    formData.append(\"uploaderId\", productInfoUpload.uploaderId);\r\n\r\n    // formData.append(\"images\", productInfoUpload.images);\r\n\r\n    // let cachedArray = productInfoUpload.images.map((item) => {\r\n    //   return item.src;\r\n    // });\r\n    // formData.append(\"images\", cachedArray);\r\n\r\n    // productInfoUpload.images.forEach((item, index) => {\r\n    //   formData.append(`image${index}`, item.src);\r\n    // });\r\n\r\n    for (let i = 0; i < productInfoUpload.images.length; i++) {\r\n      formData.append(\"images\", productInfoUpload.images[i].src);\r\n    }\r\n\r\n    // formData.append(\"image0\", productInfoUpload.images[0].src);\r\n    // // formData.append(\"images1\", productInfoUpload.images[1].src);\r\n\r\n    let { data } = await API.patch(`/product/${productid}`, formData, {\r\n      onUploadProgress: (progressEvent) => {\r\n        const progress = parseInt(\r\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n        );\r\n        // Update state here\r\n        // setUploadProgress(progress);\r\n        setTopNottification({\r\n          ...topNottification,\r\n          type: \"progress\",\r\n          progress,\r\n          name: \"\",\r\n          bg: \"#ff7302\",\r\n          color: \"white\",\r\n        });\r\n      },\r\n    });\r\n\r\n    navigate(`/products/${productid}`);\r\n\r\n    showRedMsg({ name: \"Edit Successfull\" });\r\n  };\r\n\r\n  // const toBase64 = (file) =>\r\n  //   new Promise((resolve, reject) => {\r\n  //     const reader = new FileReader();\r\n\r\n  //     reader.readAsDataURL(file); //must use query selector here\r\n  //     reader.onload = () => {\r\n  //       resolve(reader.result);\r\n  //     };\r\n  //     reader.onerror = (error) => reject(error);\r\n  //   });\r\n\r\n  // const selectImage = async () => {\r\n  //   // await imageInput.current.click();\r\n  //   let selectInput = await document.querySelector(\"#inputImage\").files[0];\r\n  //   if (selectInput !== undefined) {\r\n  //     let cashedImageArray = await productInfoUpload.images;\r\n\r\n  //     const imageString = await toBase64(selectInput);\r\n\r\n  //     let commonId = new Date().getTime();\r\n\r\n  //     await cashedImageArray.push({\r\n  //       id: commonId,\r\n  //       src: selectInput,\r\n  //     });\r\n  //     setPreview([\r\n  //       ...preview,\r\n  //       {\r\n  //         id: commonId,\r\n  //         src: imageString,\r\n  //       },\r\n  //     ]);\r\n\r\n  //     await setProductInfoUpload({\r\n  //       ...productInfoUpload,\r\n  //       images: cashedImageArray,\r\n  //     });\r\n  //   }\r\n  // };\r\n  // const removeImage = (e) => {\r\n  //   let cashedImageArray = productInfoUpload.images;\r\n  //   let cachedPreviewArray = preview;\r\n\r\n  //   let finalImagesArray = cashedImageArray.filter((item) => item.id !== e);\r\n  //   let finalPreviewArray = cachedPreviewArray.filter((item) => item.id !== e);\r\n\r\n  //   setProductInfoUpload({ ...productInfoUpload, images: finalImagesArray });\r\n  //   setPreview(finalPreviewArray);\r\n  // };\r\n  const addKeyword = () => {\r\n    if (subKeyWord !== \"\") {\r\n      let casheKeyword = productInfoUpload.keywords;\r\n\r\n      casheKeyword.push({\r\n        id: new Date().getTime(),\r\n        name: subKeyWord.toLowerCase(),\r\n      });\r\n\r\n      setProductInfoUpload({ ...productInfoUpload, keywords: casheKeyword });\r\n\r\n      setSubKeyWord(\"\");\r\n    }\r\n  };\r\n\r\n  const removeKeyWord = (e) => {\r\n    let cashedItems = productInfoUpload.keywords;\r\n\r\n    let finalItems = cashedItems.filter((item) => item.id !== e);\r\n\r\n    setProductInfoUpload({ ...productInfoUpload, keywords: finalItems });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  //---------------------For Api Request----------------//\r\n  //const formData = new FormData();\r\n  // formData.append(\"image\", storyInfo.img);\r\n  // formData.append(\"uploaderName\", storyInfo.uploaderName);\r\n  // formData.append(\"uploaderId\", storyInfo.uploaderId);\r\n\r\n  const ggg = async (e) => {\r\n    let formData = new FormData();\r\n    // formData.append(\"images\", e.target.files);\r\n\r\n    // e.target.files.forEach((item) => {\r\n    //   formData.append(\"images\", item);\r\n    // });\r\n\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      formData.append(\"images\", e.target.files[i]);\r\n    }\r\n    let { data } = await API.post(\"/product/w/\", formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-size\">\r\n      <HeaderNav />\r\n      {isLoading ? (\r\n        <div className=\"search-loading\">\r\n          <img src=\"/loading.gif\" alt=\"loading\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"upload-products-main full-size\">\r\n          <div className=\"upload-products-main-container\">\r\n            <form\r\n              className=\"log-in-form\"\r\n              onSubmit={(e) => {\r\n                handleProductEditSubmit(e);\r\n              }}\r\n            >\r\n              {/* <img\r\n              src=\"daraz-logo.png\"\r\n              alt=\"daraz\"\r\n              style={{ height: \"2.6rem\", width: \"auto\" }}\r\n            /> */}\r\n\r\n              {/* <div className=\"dr-image-input-container\">\r\n              <input\r\n                id=\"inputImage\"\r\n                ref={imageInput}\r\n                type=\"file\"\r\n                alt=\"sdhdj\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => {\r\n                  selectImage();\r\n                }}\r\n              />\r\n\r\n              {productInfoUpload.images.map((item, index) => {\r\n                return (\r\n                  <div className=\"dr-image-input-item\" key={item.id}>\r\n                    <img\r\n                      src={preview[index]?.src}\r\n                      alt={index}\r\n                      className=\"full-size\"\r\n                    />\r\n                    <div\r\n                      className=\"cross-image\"\r\n                      onClick={(e) => {\r\n                        removeImage(item.id);\r\n                      }}\r\n                    >\r\n                      <MdCancel className=\"ps-image-cross\" />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              {productInfoUpload.images.length <= 2 && (\r\n                <div\r\n                  className=\"dr-image-input-item\"\r\n                  onClick={(e) => {\r\n                    imageInput.current.click();\r\n                  }}\r\n                >\r\n                  <AiFillPlusSquare className=\"full-size\" />\r\n                </div>\r\n              )}\r\n            </div> */}\r\n\r\n              <div className=\"dr-image-input-container\">\r\n                {/* <input\r\n                id=\"inputImage\"\r\n                ref={imageInput}\r\n                type=\"file\"\r\n                alt=\"sdhdj\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => {\r\n                  selectImage();\r\n                }}\r\n              /> */}\r\n\r\n                {productInfoUpload.images.map((item, index) => {\r\n                  return (\r\n                    <div className=\"dr-image-input-item\" key={index}>\r\n                      <img src={getImageUrl(item?.org)} alt={index} className=\"full-size\" />\r\n                      {/* <div\r\n                      className=\"cross-image\"\r\n                      onClick={(e) => {\r\n                        removeImage(item.id);\r\n                      }}\r\n                    >\r\n                      <MdCancel className=\"ps-image-cross\" />\r\n                    </div> */}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <div className=\"dr-input-email\">\r\n                <label style={{ alignSelf: \"flex-start\" }}>Product Name</label>\r\n                <input\r\n                  className=\"register-input\"\r\n                  value={productInfoUpload.name}\r\n                  name=\"name\"\r\n                  type=\"name\"\r\n                  placeholder=\"Enter Product Name\"\r\n                  onChange={(e) => {\r\n                    setProductInfoUpload({\r\n                      ...productInfoUpload,\r\n                      name: e.target.value,\r\n                    });\r\n                  }}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"dr-input-password\">\r\n                <label style={{ alignSelf: \"flex-start\" }}>Price</label>\r\n                <input\r\n                  className=\"register-input\"\r\n                  value={productInfoUpload.price}\r\n                  name=\"price\"\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Price\"\r\n                  onChange={(e) => {\r\n                    setProductInfoUpload({\r\n                      ...productInfoUpload,\r\n                      price: e.target.value,\r\n                    });\r\n                  }}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"dr-input-password\">\r\n                <label style={{ alignSelf: \"flex-start\" }}>\r\n                  Discount: {productInfoUpload.discount}%\r\n                </label>\r\n                <input\r\n                  className=\"register-input\"\r\n                  value={productInfoUpload.discount}\r\n                  name=\"discount\"\r\n                  type=\"range\"\r\n                  min=\"1\"\r\n                  max=\"100\"\r\n                  placeholder=\"Enter Discount\"\r\n                  onChange={(e) => {\r\n                    setProductInfoUpload({\r\n                      ...productInfoUpload,\r\n                      discount: e.target.value,\r\n                    });\r\n                  }}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"dz-add-keyword\">\r\n                <label style={{ alignSelf: \"flex-start\" }}>Add Keywords</label>\r\n                <div className=\"keyword-input-container\">\r\n                  <input\r\n                    className=\"register-input\"\r\n                    value={subKeyWord}\r\n                    name=\"name\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Keyword\"\r\n                    onChange={(e) => {\r\n                      setSubKeyWord(e.target.value);\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"add-k-btn\"\r\n                    onClick={(e) => {\r\n                      addKeyword();\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </div>\r\n                </div>\r\n                <div className=\"added-keywords-container\">\r\n                  {productInfoUpload.keywords.map((item) => {\r\n                    return (\r\n                      <div className=\"added-keywords\" key={item.id}>\r\n                        {item.name}\r\n\r\n                        <div\r\n                          className=\"added-keyword-cross\"\r\n                          onClick={(e) => {\r\n                            removeKeyWord(item.id);\r\n                          }}\r\n                        >\r\n                          <MdOutlineCancelPresentation\r\n                            style={{\r\n                              color: \"red\",\r\n                              width: \"2rem\",\r\n                              height: \"1.5rem\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"dr-login-submit full-size center\">\r\n                <button className=\"dz-login-btn\">Submit</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        multiple\r\n        onChange={(e) => {\r\n          ggg(e);\r\n        }}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadProduct;\r\n"]},"metadata":{},"sourceType":"module"}