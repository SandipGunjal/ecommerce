{"ast":null,"code":"var _jsxFileName = \"C:\\\\All React Project\\\\Resume Projects\\\\daraz-clone-client\\\\src\\\\components\\\\Page\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Footer from \"../Home/Footer\";\nimport LogIn from \"./Components/LogIn\";\nimport SignUp from \"./Components/SignUp\";\nimport HeaderNav from \"../../Header Nav/HeaderNav\";\nimport { useGlobalContext } from \"../../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [islogIn, setIsLogIn] = useState(true);\n  const [logInData, setLogInData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [signUpData, setSignUpData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const {\n    API,\n    showRedMsg,\n    topNottification,\n    localizingToken,\n    localizingUserInfo\n  } = useGlobalContext();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handleLogInSubmit = async e => {\n    e.preventDefault();\n    let {\n      data\n    } = await API.post(\"/user/signin\", logInData);\n    await localizingToken(data.token);\n    await localizingUserInfo(data);\n    await navigate(\"/home\");\n\n    if (data.type === \"F\") {\n      showRedMsg({\n        name: \"Log In Failed\"\n      });\n    } else {\n      showRedMsg({\n        name: \"Log In Successful\"\n      });\n    } // default sign in data\n    // setLogInData({\n    //   email: \"\",\n    //   password: \"\",\n    // });\n\n  };\n\n  const handleSignUpSubmit = async e => {\n    e.preventDefault();\n\n    if (signUpData.password === signUpData.password2) {\n      let {\n        data\n      } = await API.post(\"/user/signup\", signUpData);\n      await localizingToken(data.token);\n      await localizingUserInfo(data);\n\n      if (data.type === \"F\") {\n        showRedMsg({\n          name: \"Sign Up Failed\"\n        });\n      } else {\n        showRedMsg({\n          name: \"Sign Up Successful\"\n        });\n      }\n\n      await navigate(\"/home\");\n    } else {\n      showRedMsg({\n        name: \"Passwords must be same\"\n      });\n    } // default sign up data\n    // setSignUpData({\n    //   name: \"\",\n    //   email: \"\",\n    //   password: \"\",\n    //   password2: \"\",\n    // });\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daraz-register full-size\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daraz-main full-size\",\n      children: [islogIn && /*#__PURE__*/_jsxDEV(LogIn, {\n        handleLogInSubmit: handleLogInSubmit,\n        logInData: logInData,\n        setLogInData: setLogInData,\n        setIsLogIn: setIsLogIn,\n        islogIn: setIsLogIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), !islogIn && /*#__PURE__*/_jsxDEV(SignUp, {\n        handleSignUpSubmit: handleSignUpSubmit,\n        signUpData: signUpData,\n        setSignUpData: setSignUpData,\n        setIsLogIn: setIsLogIn,\n        islogIn: islogIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"HmWwnR1JGRsnSlLzYLpDOLPt+nU=\", false, function () {\n  return [useNavigate, useGlobalContext];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/All React Project/Resume Projects/daraz-clone-client/src/components/Page/Register/Register.js"],"names":["React","useState","useEffect","useNavigate","Footer","LogIn","SignUp","HeaderNav","useGlobalContext","Register","navigate","islogIn","setIsLogIn","logInData","setLogInData","email","password","signUpData","setSignUpData","name","password2","showPassword","setShowPassword","API","showRedMsg","topNottification","localizingToken","localizingUserInfo","window","scrollTo","handleLogInSubmit","e","preventDefault","data","post","token","type","handleSignUpSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../Home/Footer\";\r\nimport LogIn from \"./Components/LogIn\";\r\nimport SignUp from \"./Components/SignUp\";\r\n\r\nimport HeaderNav from \"../../Header Nav/HeaderNav\";\r\nimport { useGlobalContext } from \"../../Context\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [islogIn, setIsLogIn] = useState(true);\r\n  const [logInData, setLogInData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [signUpData, setSignUpData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const {\r\n    API,\r\n    showRedMsg,\r\n    topNottification,\r\n    localizingToken,\r\n    localizingUserInfo,\r\n  } = useGlobalContext();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleLogInSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { data } = await API.post(\"/user/signin\", logInData);\r\n    await localizingToken(data.token);\r\n    await localizingUserInfo(data);\r\n    await navigate(\"/home\");\r\n\r\n    if (data.type === \"F\") {\r\n      showRedMsg({ name: \"Log In Failed\" });\r\n    } else {\r\n      showRedMsg({ name: \"Log In Successful\" });\r\n    }\r\n\r\n    // default sign in data\r\n    // setLogInData({\r\n    //   email: \"\",\r\n    //   password: \"\",\r\n    // });\r\n  };\r\n  const handleSignUpSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (signUpData.password === signUpData.password2) {\r\n      let { data } = await API.post(\"/user/signup\", signUpData);\r\n      await localizingToken(data.token);\r\n      await localizingUserInfo(data);\r\n\r\n      if (data.type === \"F\") {\r\n        showRedMsg({ name: \"Sign Up Failed\" });\r\n      } else {\r\n        showRedMsg({ name: \"Sign Up Successful\" });\r\n      }\r\n      await navigate(\"/home\");\r\n    } else {\r\n      showRedMsg({ name: \"Passwords must be same\" });\r\n    }\r\n    // default sign up data\r\n    // setSignUpData({\r\n    //   name: \"\",\r\n    //   email: \"\",\r\n    //   password: \"\",\r\n    //   password2: \"\",\r\n    // });\r\n  };\r\n  return (\r\n    <div className=\"daraz-register full-size\">\r\n      <HeaderNav />\r\n\r\n      <div className=\"daraz-main full-size\">\r\n        {/* **********************Log In**********************  */}\r\n\r\n        {islogIn && (\r\n          <LogIn\r\n            handleLogInSubmit={handleLogInSubmit}\r\n            logInData={logInData}\r\n            setLogInData={setLogInData}\r\n            setIsLogIn={setIsLogIn}\r\n            islogIn={setIsLogIn}\r\n          />\r\n        )}\r\n        {/* *********************Sign Up*********************** */}\r\n        {!islogIn && (\r\n          <SignUp\r\n            handleSignUpSubmit={handleSignUpSubmit}\r\n            signUpData={signUpData}\r\n            setSignUpData={setSignUpData}\r\n            setIsLogIn={setIsLogIn}\r\n            islogIn={islogIn}\r\n          />\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}