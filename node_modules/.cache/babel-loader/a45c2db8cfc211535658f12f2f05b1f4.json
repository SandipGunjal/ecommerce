{"ast":null,"code":"var _jsxFileName = \"C:\\\\All React Project\\\\Resume Projects\\\\daraz-clone-client\\\\src\\\\components\\\\Page\\\\Home\\\\CountDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountDown = () => {\n  _s();\n\n  const [countdownValue, setCountDownValue] = useState({\n    days: \"00\",\n    hours: \"00\",\n    minutes: \"00\",\n    seconds: \"00\"\n  });\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const weekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let tempDate = new Date();\n  let tempYear = tempDate.getFullYear();\n  let tempMonth = tempDate.getMonth();\n  let tempDay = tempDate.getDate(); // months are ZERO index based;\n\n  const futureDate = new Date(tempYear, tempMonth, tempDay + 10, 11, 30, 0); //   let futureDate = new Date(2021, 12, 12, 7, 30, 0);\n\n  const year = futureDate.getFullYear();\n  const hours = futureDate.getHours();\n  const minutes = futureDate.getMinutes();\n  let month = futureDate.getMonth();\n  month = months[month];\n  const weekday = weekdays[futureDate.getDay()];\n  const date = futureDate.getDate(); //   giveaway.textContent = `giveaway ends on ${weekday}, ${date} ${month} ${year} ${hours}:${minutes}am`;\n\n  const futureTime = futureDate.getTime();\n\n  function getRemaindingTime() {\n    const today = new Date().getTime();\n    const t = futureTime - today; // 1s = 1000ms\n    // 1m = 60s\n    // 1hr = 60m\n    // 1d = 24hr\n    // values in miliseconds\n\n    const oneDay = 24 * 60 * 60 * 1000;\n    const oneHour = 60 * 60 * 1000;\n    const oneMinute = 60 * 1000; // calculate all values\n\n    let days = t / oneDay;\n    days = Math.floor(days);\n    let hours = Math.floor(t % oneDay / oneHour);\n    let minutes = Math.floor(t % oneHour / oneMinute);\n    let seconds = Math.floor(t % oneMinute / 1000); // set values array\n\n    const values = [days, hours, minutes, seconds];\n    setCountDownValue({\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    });\n  }\n\n  useEffect(() => {\n    let countdown = setInterval(getRemaindingTime, 500); //set initial values\n\n    getRemaindingTime();\n    return () => clearInterval(countdown);\n  }, []);\n\n  function minTwoDigits(n) {\n    return (n < 10 ? \"0\" : \"\") + n;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flash-sale-header-countdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fs-bar-1 fs-bar center\",\n      children: minTwoDigits(countdownValue.hours)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fs-e-1 fs-e center\",\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fs-bar-2 fs-bar center\",\n      children: minTwoDigits(countdownValue.minutes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fs-e-2 fs-e center\",\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fs-bar-3 fs-bar center\",\n      children: minTwoDigits(countdownValue.seconds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CountDown, \"owlN1m46TTk1+t7sjFOOR9+hjV4=\");\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["C:/All React Project/Resume Projects/daraz-clone-client/src/components/Page/Home/CountDown.js"],"names":["React","useState","useEffect","CountDown","countdownValue","setCountDownValue","days","hours","minutes","seconds","months","weekdays","tempDate","Date","tempYear","getFullYear","tempMonth","getMonth","tempDay","getDate","futureDate","year","getHours","getMinutes","month","weekday","getDay","date","futureTime","getTime","getRemaindingTime","today","t","oneDay","oneHour","oneMinute","Math","floor","values","countdown","setInterval","clearInterval","minTwoDigits","n"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CountDown = () => {\r\n  const [countdownValue, setCountDownValue] = useState({\r\n    days: \"00\",\r\n    hours: \"00\",\r\n    minutes: \"00\",\r\n    seconds: \"00\",\r\n  });\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const weekdays = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  let tempDate = new Date();\r\n  let tempYear = tempDate.getFullYear();\r\n  let tempMonth = tempDate.getMonth();\r\n  let tempDay = tempDate.getDate();\r\n  // months are ZERO index based;\r\n  const futureDate = new Date(tempYear, tempMonth, tempDay + 10, 11, 30, 0);\r\n\r\n  //   let futureDate = new Date(2021, 12, 12, 7, 30, 0);\r\n\r\n  const year = futureDate.getFullYear();\r\n  const hours = futureDate.getHours();\r\n  const minutes = futureDate.getMinutes();\r\n\r\n  let month = futureDate.getMonth();\r\n  month = months[month];\r\n  const weekday = weekdays[futureDate.getDay()];\r\n  const date = futureDate.getDate();\r\n  //   giveaway.textContent = `giveaway ends on ${weekday}, ${date} ${month} ${year} ${hours}:${minutes}am`;\r\n\r\n  const futureTime = futureDate.getTime();\r\n  function getRemaindingTime() {\r\n    const today = new Date().getTime();\r\n\r\n    const t = futureTime - today;\r\n    // 1s = 1000ms\r\n    // 1m = 60s\r\n    // 1hr = 60m\r\n    // 1d = 24hr\r\n    // values in miliseconds\r\n    const oneDay = 24 * 60 * 60 * 1000;\r\n    const oneHour = 60 * 60 * 1000;\r\n    const oneMinute = 60 * 1000;\r\n    // calculate all values\r\n    let days = t / oneDay;\r\n    days = Math.floor(days);\r\n    let hours = Math.floor((t % oneDay) / oneHour);\r\n    let minutes = Math.floor((t % oneHour) / oneMinute);\r\n    let seconds = Math.floor((t % oneMinute) / 1000);\r\n\r\n    // set values array\r\n    const values = [days, hours, minutes, seconds];\r\n\r\n    setCountDownValue({\r\n      days: days,\r\n      hours: hours,\r\n      minutes: minutes,\r\n      seconds: seconds,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let countdown = setInterval(getRemaindingTime, 500);\r\n    //set initial values\r\n    getRemaindingTime();\r\n\r\n    return () => clearInterval(countdown);\r\n  }, []);\r\n\r\n  function minTwoDigits(n) {\r\n    return (n < 10 ? \"0\" : \"\") + n;\r\n  }\r\n  return (\r\n    <div className=\"flash-sale-header-countdown\">\r\n      <div className=\"fs-bar-1 fs-bar center\">\r\n        {minTwoDigits(countdownValue.hours)}\r\n      </div>\r\n      <div className=\"fs-e-1 fs-e center\">:</div>\r\n      <div className=\"fs-bar-2 fs-bar center\">\r\n        {minTwoDigits(countdownValue.minutes)}\r\n      </div>\r\n      <div className=\"fs-e-2 fs-e center\">:</div>\r\n      <div className=\"fs-bar-3 fs-bar center\">\r\n        {minTwoDigits(countdownValue.seconds)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountDown;\r\n"]},"metadata":{},"sourceType":"module"}